name: Build frontend

on:
  push:
    branches:
      - develop
      - master

jobs:
  frontend-build:
    name: Build Front-end
    runs-on: ubuntu-latest
    env:
      LEIN_ROOT: nbd
      JVM_OPTS: -Xmx3200m

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Introduces slugified variables; eg "master" instead of "refs/heads/master"
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Conditionally set build profile based on branch (master)
        if: endswith(github.ref, '/master')
        run: |
          echo "PROFILE=min" >> $GITHUB_ENV
      - name: Conditionally set build profile based on branch (develop)
        if: endswith(github.ref, '/develop')
        run: |
          echo "PROFILE=mindev" >> $GITHUB_ENV

      - name: Set up Java for Clojure
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up / restore caching
        uses: actions/cache@v2
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-packages-

      - name: Cache maven deps as well
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: m2-deps-${{ hashFiles('shadow-cljs.edn') }}
          restore-keys: |
            m2-deps-

      - name: Install Dependencies
        run: npm install

      - name: Build project
        run: npx shadow-cljs release ${{ env.PROFILE }}

      - run: tar -c -z -v -C resources/public -f "${{ env.GITHUB_REPOSITORY_SLUG }}-${{ env.GITHUB_REF_SLUG }}-frontend.tgz" js/compiled/app.js js/compiled/app.js.map css img

      - name: Create timestamp for release tag-name
        id: tag_name
        run: echo "::set-output name=tag_name::$(date +%Y%m%d%H%M%S)"

      - name: Cut a release, for download by Ansible
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_name.outputs.tag_name }}
          release_name: Frontend (${{ env.GITHUB_REF_SLUG }} - ${{ env.GITHUB_SHA_SHORT }})
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "frontend/${{ env.GITHUB_REPOSITORY_SLUG }}-${{ env.GITHUB_REF_SLUG }}-frontend.tgz"
          asset_name: "${{ env.GITHUB_REPOSITORY_SLUG }}-${{ env.GITHUB_REF_SLUG }}-frontend.tgz"
          asset_content_type: application/gzip
